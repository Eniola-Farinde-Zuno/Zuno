// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String        @unique
  password      String
  tasks         Task[]
  fcmTokens     FcmToken[]
  notifications Notification[]
  pomodoro      Pomodoro[]
}

enum priority {
  LOW
  MEDIUM
  HIGH
}

enum status {
  NONE
  IN_PROGRESS
  COMPLETED
  CLOSED
  BLOCKED
}

enum size {
  NONE
  EXTRA_SMALL
  SMALL
  MEDIUM
  LARGE
}

model Task {
  id            Int    @id @default(autoincrement())
  title         String
  description   String?
  status        status @default(NONE)
  priority      priority
  size          size  @default(NONE)
  userId        Int
  user          User   @relation(fields: [userId], references: [id])
  deadline      DateTime
  createdAt     DateTime @default(now())
  priorityScore Float @default(0.0)
  canStart      Boolean  @default(true)
  dependencies  Int[]
}

model FcmToken {
  id        Int        @id @default(autoincrement())
  token     String     @unique
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Notification {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  data      String?
  isRead    Boolean   @default(false)
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
}
